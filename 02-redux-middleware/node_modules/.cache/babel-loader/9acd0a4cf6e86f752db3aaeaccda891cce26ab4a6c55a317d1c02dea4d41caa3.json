{"ast":null,"code":"import { createStore } from \"redux\";\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 0,\n    darkMode: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"increase\":\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case \"decrease\":\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    case \"toggle\":\n      return {\n        ...state,\n        darkMode: true\n      };\n    default:\n      return state;\n  }\n}\nexport const store = createStore(rootReducer);","map":{"version":3,"names":["createStore","rootReducer","state","arguments","length","undefined","count","darkMode","action","type","store"],"sources":["/Users/ranjit/WA/Projects/redux/src/ReduxStore.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nfunction rootReducer(state = { count: 0, darkMode: false }, action) {\n  switch (action.type) {\n    case \"increase\":\n      return { ...state, count: state.count + 1 };\n    case \"decrease\":\n      return { ...state, count: state.count - 1 };\n    case \"toggle\":\n      return { ...state, darkMode: true };\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(rootReducer);\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,SAASC,WAAWA,CAAA,EAAgD;EAAA,IAA/CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAM,CAAC;EAAA,IAAEC,MAAM,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChE,QAAQG,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAE,GAAGP,KAAK;QAAEI,KAAK,EAAEJ,KAAK,CAACI,KAAK,GAAG;MAAE,CAAC;IAC7C,KAAK,UAAU;MACb,OAAO;QAAE,GAAGJ,KAAK;QAAEI,KAAK,EAAEJ,KAAK,CAACI,KAAK,GAAG;MAAE,CAAC;IAC7C,KAAK,QAAQ;MACX,OAAO;QAAE,GAAGJ,KAAK;QAAEK,QAAQ,EAAE;MAAK,CAAC;IACrC;MACE,OAAOL,KAAK;EAAC;AAEnB;AAEA,OAAO,MAAMQ,KAAK,GAAGV,WAAW,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}