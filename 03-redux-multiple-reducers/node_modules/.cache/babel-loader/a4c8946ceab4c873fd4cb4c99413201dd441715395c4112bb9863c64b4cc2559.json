{"ast":null,"code":"var _jsxFileName = \"/Users/ranjit/WA/Projects/redux/src/App.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { store } from \"./ReduxStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(store);\n  const count = useSelector(state => state.count);\n  const darkMode = useSelector(state => state.darkMode);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode === false ? \"App\" : \"dark-mode\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: \"decrease\"\n          });\n        },\n        children: \"Decrease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: \"reset\"\n          });\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: \"increase\"\n          });\n        },\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: \"toggle\"\n        });\n      },\n      children: \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BLu/mBssUObaNChQpq98ufrqvAk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","store","jsxDEV","_jsxDEV","App","_s","console","log","count","state","darkMode","dispatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["/Users/ranjit/WA/Projects/redux/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { store } from \"./ReduxStore\";\n\nfunction App() {\n  console.log(store);\n  const count = useSelector((state) => state.count);\n  const darkMode = useSelector((state) => state.darkMode);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={darkMode === false ? \"App\" : \"dark-mode\"}>\n      <h1>Redux Practice</h1>\n      <p>{count}</p>\n      <div>\n        <button\n          onClick={() => {\n            dispatch({ type: \"decrease\" });\n          }}\n        >\n          Decrease\n        </button>\n        <button\n          onClick={() => {\n            dispatch({ type: \"reset\" });\n          }}\n        >\n          Reset\n        </button>\n        <button\n          onClick={() => {\n            dispatch({ type: \"increase\" });\n          }}\n        >\n          Increase\n        </button>\n      </div>\n      <button\n        onClick={() => {\n          dispatch({ type: \"toggle\" });\n        }}\n      >\n        Dark Mode\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAClB,MAAMO,KAAK,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,QAAQ,GAAGX,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EACvD,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAE9B,oBACEG,OAAA;IAAKS,SAAS,EAAEF,QAAQ,KAAK,KAAK,GAAG,KAAK,GAAG,WAAY;IAAAG,QAAA,gBACvDV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBd,OAAA;MAAAU,QAAA,EAAIL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEe,OAAO,EAAEA,CAAA,KAAM;UACbP,QAAQ,CAAC;YAAEQ,IAAI,EAAE;UAAW,CAAC,CAAC;QAChC,CAAE;QAAAN,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTd,OAAA;QACEe,OAAO,EAAEA,CAAA,KAAM;UACbP,QAAQ,CAAC;YAAEQ,IAAI,EAAE;UAAQ,CAAC,CAAC;QAC7B,CAAE;QAAAN,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTd,OAAA;QACEe,OAAO,EAAEA,CAAA,KAAM;UACbP,QAAQ,CAAC;YAAEQ,IAAI,EAAE;UAAW,CAAC,CAAC;QAChC,CAAE;QAAAN,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNd,OAAA;MACEe,OAAO,EAAEA,CAAA,KAAM;QACbP,QAAQ,CAAC;UAAEQ,IAAI,EAAE;QAAS,CAAC,CAAC;MAC9B,CAAE;MAAAN,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACZ,EAAA,CA1CQD,GAAG;EAAA,QAEIL,WAAW,EACRA,WAAW,EACXC,WAAW;AAAA;AAAAoB,EAAA,GAJrBhB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}