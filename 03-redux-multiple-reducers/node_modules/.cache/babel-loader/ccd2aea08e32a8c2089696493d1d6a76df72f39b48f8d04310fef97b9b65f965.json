{"ast":null,"code":"var _jsxFileName = \"/Users/ranjit/WA/Projects/redux/src/App.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { store } from \"./ReduxStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // console.log(store.getState());\n  const {\n    countObj,\n    inputTextObj\n  } = store.getState();\n  console.log(countObj);\n  const count = countObj.count;\n  // const darkMode = countObj.darkMode;\n  // const count = useSelector((state) => state.count);\n  // const darkMode = useSelector((state) => state.darkMode);\n  // const dispatch = useDispatch();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: false === false ? \"App\" : \"dark-mode\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","store","jsxDEV","_jsxDEV","App","countObj","inputTextObj","getState","console","log","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ranjit/WA/Projects/redux/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { store } from \"./ReduxStore\";\n\nfunction App() {\n  // console.log(store.getState());\n  const { countObj, inputTextObj } = store.getState();\n  console.log(countObj);\n\n  const count = countObj.count;\n  // const darkMode = countObj.darkMode;\n  // const count = useSelector((state) => state.count);\n  // const darkMode = useSelector((state) => state.darkMode);\n  // const dispatch = useDispatch();\n\n  return (\n    <div className={false === false ? \"App\" : \"dark-mode\"}>\n      <h1>Redux Practice</h1>\n      {/* <p>{count}</p> */}\n      {/* <div>\n        <button\n          onClick={() => {\n            dispatch({ type: \"decrease\" });\n          }}\n        >\n          Decrease\n        </button>\n        <button\n          onClick={() => {\n            dispatch({ type: \"reset\" });\n          }}\n        >\n          Reset\n        </button>\n        <button\n          onClick={() => {\n            dispatch({ type: \"increase\" });\n          }}\n        >\n          Increase\n        </button>\n      </div>\n      <button\n        onClick={() => {\n          dispatch({ type: \"toggle\" });\n        }}\n      >\n        Dark Mode\n      </button> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGL,KAAK,CAACM,QAAQ,EAAE;EACnDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAErB,MAAMK,KAAK,GAAGL,QAAQ,CAACK,KAAK;EAC5B;EACA;EACA;EACA;;EAEA,oBACEP,OAAA;IAAKQ,SAAS,EAAE,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,WAAY;IAAAC,QAAA,eACpDT,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAgCnB;AAEV;AAACC,EAAA,GA/CQb,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}